-- Catalog DB for Iceberg JDBC
CREATE DATABASE IF NOT EXISTS iceberg_catalog;

-- OLTP DB
CREATE DATABASE IF NOT EXISTS appdb;
USE appdb;

CREATE TABLE products (
  id INT PRIMARY KEY AUTO_INCREMENT,
  sku VARCHAR(64) NOT NULL UNIQUE,
  name VARCHAR(128) NOT NULL
) ENGINE=InnoDB;

INSERT INTO products (sku, name) VALUES
 ('P-001','Widget Mini'),
 ('P-002','Widget Standard'),
 ('P-003','Widget Pro'),
 ('P-004','Widget Ultra');

CREATE TABLE sales (
  id BIGINT PRIMARY KEY AUTO_INCREMENT,
  product_id INT NOT NULL,
  qty INT NOT NULL,
  price DECIMAL(10,2) NOT NULL,
  sale_ts TIMESTAMP NOT NULL,
  CONSTRAINT fk_prod FOREIGN KEY (product_id) REFERENCES products(id)
) ENGINE=InnoDB;

-- Generate ~1000 rows over last 365 days using simpler approach
INSERT INTO sales (product_id, qty, price, sale_ts)
SELECT
  (ROW_NUMBER() OVER () % 4) + 1 as product_id,
  FLOOR(1 + (RAND() * 4)) as qty,
  CASE ((ROW_NUMBER() OVER () % 4) + 1)
    WHEN 1 THEN 9.99
    WHEN 2 THEN 19.99
    WHEN 3 THEN 29.99
    ELSE 49.99
  END as price,
  DATE_SUB(NOW(), INTERVAL (1095 - ROW_NUMBER() OVER ()) DAY) + INTERVAL (RAND() * 86400) SECOND as sale_ts
FROM
  (SELECT a.N + b.N * 10 + c.N * 100 + 1 as num
   FROM (SELECT 0 AS N UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4
         UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) a
   CROSS JOIN (SELECT 0 AS N UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4
               UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) b
   CROSS JOIN (SELECT 0 AS N UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4
               UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) c
  ) numbers
WHERE num <= 900;